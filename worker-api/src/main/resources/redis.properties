redis.cluster=redis.client1
redis.client1=127.0.0.1\:6379
redis.ip=127.0.0.1
redis.port=6379

#设置一个key的过期秒数， 超过时间后，将会自动删除该key,86400表示24小时
redis.expire.seconds=86400

############################# 连接池配置 start
#最大连接数(如果赋值为-1，则表示不限制)
redis.pool.maxActive=5000
#最大空闲连接数
redis.pool.maxIdle=256
#最小空闲连接数, 默认0
redis.pool.minIdle=0
#最大的等待时间，如果超过等待时间，则直接抛出JedisConnectionException
redis.pool.maxWait=5000L
#在获取连接的时候检查有效性, 默认false
redis.pool.testOnBorrow=false
#
redis.pool.testOnReturn=true
#在空闲时检查有效性, 默认false
redis.pool.testWhileIdle=true
#
redis.pool.minEvictableIdleTimeMillis=60000l
#逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
redis.pool.timeBetweenEvictionRunsMillis=3000l
#每次逐出检查时 逐出的最大数目 如果为负数就是 : 1/abs(n), 默认3
redis.pool.numTestsPerEvictionRun=-1
#对象空闲多久后逐出, 当空闲时间>该值 且 空闲连接>最大空闲数 时直接逐出,不再根据MinEvictableIdleTimeMillis判断  (默认逐出策略)
redis.pool.softMinEvictableIdleTimeMillis=1800000
#读取超时
redis.pool.timeout=60000
redis.pool.global.timeout=50
############################# 连接池配置 end

#redis connect timeout unit ms
redis.socket.connect.timeout=2000
#redis read timeout unit ms
redis.socket.read.timeout=3000
#init conncect redis socket numbers
redis.socket.init.conncect=5
#max conncect redis socket numbers
redis.socket.max.conncect=10
#min conncect redis socket numbers
redis.socket.min.conncect=5
#redis max wait timeout unit ms
redis.socket.maxwait.timeout=3000
#redis  min evictable time unit ms
redis.socket.minEvictable.timeout=1800000
#redis test when get connect
redis.socket.testOnBorrow = false
#redis test when whileIdle
redis.socket.setTestWhileIdle =true 
#redis global connect timeout
redis.socket.global.timeout=50



#baidu tuisong android  pad_app
baidu.msg.android.app1.appId=8701777
baidu.msg.android.app1.apiKey=OH4rdBp9oDayNhhYqZ4GBrhD
baidu.msg.android.app1.secretKey=nptwSpHqPp8DRggDXQr6uYNdKBvV7Pdv

#baidu tuisong android  phone_app
baidu.msg.android.app2.appId=8412949
baidu.msg.android.app2.apiKey=RPISUOzRivs7vvZxAuLUOT20
baidu.msg.android.app2.secretKey=a0SLVYa1ZIv4sL7MlYmMGCDM8imIdRXI

#baidu tuisong ios
baidu.msg.ios.appId=8426577
baidu.msg.ios.apiKey=InWGg2SCuM9WjXTtjWjHxhga
baidu.msg.ios.secretKey=1dGtGFdZgmGRqrhHU1jE7xG6j3gBykxX

